<!DOCTYPE html>
<html>
<head>
    <title></title>
    <meta content="text/html; charset=utf-8" />
    <link href="res/themes/default/easyui.css" rel="stylesheet" type="text/css" />
    <link href="res/themes/icon.css" rel="stylesheet" type="text/css" />
    <script src="res/js/jquery.min.js" type="text/javascript"></script>
    <script src="res/js/jquery.easyui.min.js" type="text/javascript"></script>
    <script src="res/js/easyui-lang-zh_CN.js" type="text/javascript"></script>

    <script src="res/js/Configuration.js" type="text/javascript"></script>
    <script src="res/js/UserManager.js" type="text/javascript"></script>
    <script src="res/js/Application.js" type="text/javascript"></script>
    <script src="res/js/common.js" type="text/javascript"></script>
    <style type="text/css">
    </style>
</head>
<body>
    <div style="margin: 20px;">
        <div id="toolbar" style="padding:5px;height:auto;">
            <a href="javascript:void(0);" class="easyui-linkbutton" data-options="iconCls:'icon-ok'" onclick="on_apply();">应用</a>            <a href="javascript:void(0);" class="easyui-linkbutton" data-options="iconCls:'icon-refresh'" onclick="$('#pgrid').propertygrid('reload');">刷新</a>	    </div>
        <div class="easyui-panel" title="&nbsp;系统设置" style="width:800px;" data-options="collapsible:true, iconCls:'icon-config'">
	        <table id="pgrid"></table>
        </div>    </div>

    <script type="text/javascript">
        $(function () {
            $('#pgrid').propertygrid({
                border: false,
                scrollbarSize: 0,
                showGroup: true,
                toolbar: '#toolbar',
                columns: [[
                    { field: 'name', title: '系统参数', width: 200, align: 'center' },
                    { field: 'value', title: '参数设置', width: 500, halign: 'center', formatter: fmt_value }
                ]],
                loader: function (param, success, error) {
                    function filter(objs) {
                        var cfg = {};
                        $(objs).each(function (k, v) { cfg[v['name']] = v['value']; });

                        var rows = [];
                        for (var a in data_config) {
                            var g = data_config[a];
                            $(g.data).each(function (k, v) {
                                v.value = cfg[v.id];
                                v.group = g.name;
                                rows.push(v);
                            });
                        }
                        success(rows);
                    }
                    new Configuration().GetConfigurations(param, filter, error);
                }
            });
        });

        var data_config = {
            SmtpConfig: { name: '邮件参数', data: [
                { id: 'SmtpHost', name: 'SMTP 服务器地址', editor: { type: 'text'} },
                { id: 'SmtpPort', name: 'SMTP 服务器端口', editor: { type: 'numberbox'} },
                { id: 'SmtpAccount', name: 'SMTP 登录帐号　', editor: { type: 'text'} },
                { id: 'SmtpPassword', name: 'SMTP 登录密码　', editor: { type: 'password' }, options: { formatter: 'fmt_password'} },
                { id: 'MailFrom', name: '邮件地址', editor: { type: 'validatebox', options: { validType: ['email', 'length[0,30]']}} },
                { id: 'MailSbuject', name: '邮件标题', editor: { type: 'text'} },
                { id: 'MailBody', name: '邮件正文', editor: { type: 'text'} }
            ]
            },
            Parameter: { id: 'Parameter', name: '系统参数', data: [
                { id: 'TSPortNumber', name: '远程应用端口', editor: { type: 'numberbox'} },
                { id: 'TSIdleMinutes', name: '结束已断开的会话', editor: { type: 'numberbox'} },
                { id: 'FobidClientMap', name: '禁用客户端设备', editor: { type: 'checkbox', options: { 'on': 'True', 'off': 'False'}} },
                { id: 'IExplorePath', name: 'IExplorer 浏览器', editor: { type: 'program'} }
            ]
            },
            AccessRule: { id: 'AccessRule', name: '访问控制', data: [
                { id: 'ForbidLocalUsers', name: '禁止本地用户访问', editor: { type: 'checkbox', options: { 'on': 'True', 'off': 'False'}} },
                { id: 'PermitRemoteAddress', name: '限制远程地址访问', editor: { type: 'text'} }
            ]
            }
        };
        function fmt_value(val, row) {
            switch (row.id) {
                case 'SmtpPassword': return '********';
                case 'TSIdleMinutes': return val + ' 分钟';
                default: return val;
            }
        }
    </script>
    <script type="text/javascript">
        function on_apply() {
            var ps = {};
            var data = $('#pgrid').propertygrid('getData');
            $(data.rows).each(function (k, v) {
                ps[v.id] = v.value;
            });
            new Configuration('POST').SetConfigurations(ps,
                function (data) {
                    $('#pgrid').propertygrid('reload');
                    $.messager.show({ title: '提示', msg: '系统设置已更新.', timeout: 5000, showType: 'show' });
                }, err_apply);
        }
    </script>
</body>
</html>
